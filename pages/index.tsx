import Head from "next/head";
import Layout, { siteTitle } from "../components/Layout";
import { getSortedPostsData, File } from "../lib/files";
import styles from "../styles/Home.module.css";
import cardStyles from "../styles/Card.module.css";
import Card from "../components/Card";
import { useState } from "react";
import DoubledCard from "../components/DoubledCard";

interface AllPostDataProps {
  allPostsData: File[];
}

export async function getStaticProps() {
  const allPostsData = getSortedPostsData();
  return {
    props: {
      allPostsData,
    },
  };
}

const Home = ({ allPostsData }: AllPostDataProps) => {
  const [search, setSearch] = useState<string[]>([]);
  const [selectedCard, setSelectedCard] = useState("");

  // search by title
  const searchedLink = [...allPostsData].filter((data) => {
    return search.length === 0
      ? true
      : search.every((characters: string) =>
          data.title.toLowerCase().includes(characters.toLowerCase())
        );
  });

  // save selected card
  const onDoubled = (id: string) => {
    setSelectedCard(id);
  };

  const onClose = () => {
    setSelectedCard("");
  };

  return (
    <Layout home>
      <>
        <Head>
          <title>{siteTitle}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className={styles.grid_container}>
          <div className={styles.title_container}>
            <h1 className={styles.title}>Your files</h1>
            <input
              type="text"
              placeholder="Search title.."
              defaultValue={search.join(" ")}
              onChange={(e) =>
                setSearch(
                  e.target.value.trim() ? e.target.value.trim().split(" ") : []
                )
              }
            />
          </div>

          <div className={styles.container_body}>
            <ul
              className={
                selectedCard.length === 0
                  ? styles.list
                  : styles.containsDoubledCard
              }
            >
              {searchedLink.map((file) =>
                file.id === selectedCard ? (
                  <div>
                    <DoubledCard
                      onClose={() => onClose()}
                      key={file.id}
                      {...file}
                      onClick={() => onDoubled(file.id)}
                      className={styles.double}
                    />
                  </div>
                ) : (
                  <Card
                    key={file.id}
                    {...file}
                    onClick={() => onDoubled(file.id)}
                    className={cardStyles.standard}
                  />
                )
              )}
            </ul>
          </div>
        </div>
      </>
    </Layout>
  );
};

export default Home;
